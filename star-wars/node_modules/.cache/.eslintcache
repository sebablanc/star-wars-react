[{"/star-wars/src/index.js":"1","/star-wars/src/App.js":"2","/star-wars/src/reportWebVitals.js":"3","/star-wars/src/components/index.js":"4","/star-wars/src/components/eliminar-character.js":"5","/star-wars/src/components/obtener-characters.js":"6","/star-wars/src/components/home.js":"7","/star-wars/src/components/agregar-character.js":"8","/star-wars/src/components/home-big-button.js":"9","/star-wars/src/components/ui/form-button.js":"10","/star-wars/src/components/character-cards.js":"11","/star-wars/src/components/ui/input-form.js":"12","/star-wars/src/components/ui/select-form.js":"13","/star-wars/src/components/ui/character-card.js":"14"},{"size":500,"mtime":1618682881736,"results":"15","hashOfConfig":"16"},{"size":124,"mtime":1619046018989,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1618682881736,"results":"18","hashOfConfig":"16"},{"size":848,"mtime":1621470674069,"results":"19","hashOfConfig":"16"},{"size":3264,"mtime":1621470799042,"results":"20","hashOfConfig":"16"},{"size":2411,"mtime":1621470844871,"results":"21","hashOfConfig":"16"},{"size":761,"mtime":1621470807054,"results":"22","hashOfConfig":"16"},{"size":1938,"mtime":1621470789470,"results":"23","hashOfConfig":"16"},{"size":277,"mtime":1620949921660,"results":"24","hashOfConfig":"16"},{"size":481,"mtime":1619050387021,"results":"25","hashOfConfig":"16"},{"size":327,"mtime":1621468997881,"results":"26","hashOfConfig":"16"},{"size":619,"mtime":1619051296112,"results":"27","hashOfConfig":"16"},{"size":571,"mtime":1624281816909,"results":"28","hashOfConfig":"16"},{"size":496,"mtime":1624212416794,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rdp9ku",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/star-wars/src/index.js",[],["66","67"],"/star-wars/src/App.js",[],"/star-wars/src/reportWebVitals.js",[],"/star-wars/src/components/index.js",[],"/star-wars/src/components/eliminar-character.js",["68","69"],"import React, { useState, useEffect } from 'react';\nimport darthVaderCrack from '../assets/Darth_Vader.jpg';\nimport SelectForm from './ui/select-form';\nimport FormButton from './ui/form-button';\n\nfunction EliminarCharacter({changePage}){\n    const [episodios, setEpisodios] = useState([]);\n    const [personajes, setPersonajes] = useState([]);\n    const [episodio, setEpisodio] = useState();\n    const [personaje, setPersonaje] = useState('');\n    \n    useEffect(async () => {\n        try {\n            const response = await fetch('http://localhost:8000/getEpisodes', {\n                method: 'get',\n                headers: { 'Content-Type': 'application/json' },\n            });\n            const data = await response.json();\n            if(data.reply){\n                setEpisodios(data.reply);\n            } else {\n                return data.message;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    },[]);\n\n   \n\n    const findCharacters = async (episode) => {\n        try {\n            if(!episode){\n                setPersonajes([]);\n                return;\n            }\n\n            const response = await fetch(`http://localhost:8000/getCharactersByEpisode?episode=${episode}`, {\n                method: 'get',\n                headers: { 'Content-Type': 'application/json' }\n            });\n            const data = await response.json();\n            if(data.reply){\n                setPersonajes(data.reply);\n            } else {\n                return data.message;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        submitData();\n    }\n\n    async function submitData() {\n        if(episodio === '' || personaje === '') return;\n\n        try {\n            const response = await fetch('http://localhost:8000/deleteCharacter', {\n                method: 'delete',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    episode: episodio,\n                    character: personaje\n                })\n            });\n            const data = await response.json();\n            findCharacters(episodio);\n            alert(data.message);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    return(\n        <div>\n            <h1 className=\"welcome-title\">No subestimes el poder de la fuerza</h1>\n            <img className=\"character-float\" src={darthVaderCrack} />\n\n            <form id=\"addForm\" className=\"agregar-character-form\" onSubmit={(e)=> handleSubmit(e)} >\n                <SelectForm label=\"Episodio\" list={episodios} callback={(event) => {setEpisodio(event.target.value); findCharacters(event.target.value)}}></SelectForm>\n                <SelectForm label=\"Personaje\" list={personajes} callback={(event) => setPersonaje(event.target.value)}></SelectForm>\n                \n                <FormButton id=\"cancelButton\" nameClass=\"back-button\" type=\"button\" label=\"Volver\" onClicked={() => changePage('HOME')} />\n                <FormButton id=\"submitButton\" nameClass=\"submit-button delete-button\" type=\"submit\" label=\"Eliminar\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default EliminarCharacter;","/star-wars/src/components/obtener-characters.js",["70","71","72"],"import React, { useState, useEffect } from 'react';\nimport hiC3PO from '../assets/hi-c3po.png';\nimport SelectForm from './ui/select-form';\nimport FormButton from './ui/form-button';\nimport CharactersCards from './character-cards';\n\nfunction ObtenerCharacters({changePage}){\n    const [episodios, setEpisodios] = useState([]);\n    const [personajes, setPersonajes] = useState([]);\n    const [episodio, setEpisodio] = useState();\n    \n    useEffect(async () => {\n        try {\n            const response = await fetch('http://localhost:8000/getEpisodes', {\n                method: 'get',\n                headers: { 'Content-Type': 'application/json' },\n            });\n            const data = await response.json();\n            if(data.reply){\n                setEpisodios(data.reply);\n            } else {\n                return data.message;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    },[]);\n\n    const findCharacters = async (episode) => {\n        try {\n            if(!episode){\n                setPersonajes([]);\n                return;\n            }\n\n            const response = await fetch(`http://localhost:8000/getCharactersByEpisode?episode=${episode}`, {\n                method: 'get',\n                headers: { 'Content-Type': 'application/json' }\n            });\n            const data = await response.json();\n            if(data.reply){\n                setPersonajes(data.reply);\n            } else {\n                return data.message;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    return(\n        <div>\n             <h1 className=\"welcome-title\">\n                <div>A veces no comprendo el comportamiento humano.</div>\n                <div>SÃ³lo intento hacer mi trabajo de la forma mas eficiente.</div>\n            </h1>\n            <img className=\"character-float\" src={hiC3PO} />\n\n            <form id=\"addForm\" className=\"agregar-character-form\" >\n                <SelectForm label=\"Episodio\" list={episodios} callback={(event) => {setEpisodio(event.target.value); findCharacters(event.target.value)}}></SelectForm>\n                \n                <FormButton id=\"cancelButton\" nameClass=\"back-button\" type=\"button\" label=\"Volver\" onClicked={() => changePage('HOME')} />\n\n                <CharactersCards list={personajes} />\n            </form>\n        </div>\n    );\n}\n\nexport default ObtenerCharacters;","/star-wars/src/components/home.js",["73"],"import React from 'react';\nimport logo from '../assets/Star_Wars_logo.png';\nimport HomeBigButton from './home-big-button';\n\nfunction Home({changePage}){\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"welcome-title\">Bienvenido a tu base de datos de personajes</h1>\n      <img className=\"img-logo\" src={logo}/>\n    \n      <div className=\"botonera-home\">\n        <HomeBigButton label=\"Agregar personaje\" ownClass=\"first-button\" value=\"AGREGAR\" callback={changePage}/>\n        <HomeBigButton label=\"Eliminar personaje\" ownClass=\"second-button\" value=\"ELIMINAR\" callback={changePage}/>\n        <HomeBigButton label=\"Obtener personajes\" ownClass=\"third-button\" value=\"OBTENER\" callback={changePage}/>\n      </div>\n    </div>\n    );\n}\n\nexport default Home;","/star-wars/src/components/agregar-character.js",["74"],"import React, { useState } from 'react';\nimport yodaThinking from '../assets/yoda-thinking.webp';\nimport FormButton from './ui/form-button';\nimport InputForm from './ui/input-form';\n\nfunction AgregarCharacter({changePage}){\n    const [episodio, setEpisodio] = useState('');\n    const [personaje, setPersonaje] = useState('');\n\n    async function submitData() {\n        if(episodio === '' || personaje === '') return;\n\n        try {\n            const response = await fetch('http://localhost:8000/saveCharacter', {\n                method: 'post',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    episode: 'episodio_'+episodio,\n                    character: personaje\n                })\n            });\n            const data = await response.json();\n            alert(data.message);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        submitData();\n    }\n\n    return (\n        <div>\n            <h1 className=\"welcome-title\">Â¿Agregar un nuevo personaje es lo que deseas, joven padawan?</h1>\n            <img className=\"character-float\" src={yodaThinking} />\n        \n            <form id=\"addForm\" className=\"agregar-character-form\" onSubmit={(e)=> handleSubmit(e)} >\n                \n                <InputForm label=\"Episodio\" type=\"number\" onChange={(event) => setEpisodio(event.target.value)} />\n\n                <InputForm label=\"Personaje\" type=\"text\" onChange={(event) => setPersonaje(event.target.value)} />\n                \n                <FormButton id=\"cancelButton\" nameClass=\"back-button\" type=\"button\" label=\"Volver\" onClicked={() => changePage('HOME')} />\n                <FormButton id=\"submitButton\" nameClass=\"submit-button save-button\" type=\"submit\" label=\"Guardar\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default AgregarCharacter;","/star-wars/src/components/home-big-button.js",[],"/star-wars/src/components/ui/form-button.js",["75"],"import React from 'react';\n\nclass FormButton extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    clicked = () =>{\n        if(this.props.onClicked == null){\n            return;\n        }\n        this.props.onClicked();\n    }\n\n\n    render(){\n        return (\n            <button id={this.props.id} className={this.props.nameClass} type={this.props.type} onClick={this.clicked}>{this.props.label}</button>\n        );\n    }\n}\n\nexport default FormButton;","/star-wars/src/components/character-cards.js",[],"/star-wars/src/components/ui/input-form.js",["76"],"import React from 'react';\n\nclass InputForm extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    clicked = () =>{\n        if(this.props.onClicked == null){\n            return;\n        }\n        this.props.onClicked();\n    }\n\n    render(){\n        return (\n            <div className=\"form-data\">\n                <label htmlFor={this.props.label.toLowerCase()}>{this.props.label}: </label>\n                <input className=\"input\" name={this.props.label.toLowerCase()} type={this.props.type} onChange={this.props.onChange}/>\n            </div>\n        );\n    }\n}\n\nexport default InputForm;","/star-wars/src/components/ui/select-form.js",[],"/star-wars/src/components/ui/character-card.js",["77"],"import React from 'react';\n\nfunction CharactersCard({character}){\n    const img = '../../assets/Darth_Vader.jpg';\n    return(\n        <div className=\"character-cards-container\" > \n            <div className=\"character-card\">\n                <img className=\"card-character-img\" src={process.env.PUBLIC_URL + '/imgs/'+character.toLowerCase()+'.png'} />\n                <div className=\"card-character-info\">{character}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default CharactersCard;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":12,"column":15,"nodeType":"84","endLine":27,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":80,"column":13,"nodeType":"87","endLine":80,"endColumn":70},{"ruleId":"88","severity":1,"message":"89","line":10,"column":12,"nodeType":"90","messageId":"91","endLine":10,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":12,"column":15,"nodeType":"84","endLine":27,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":56,"column":13,"nodeType":"87","endLine":56,"endColumn":61},{"ruleId":"85","severity":1,"message":"86","line":10,"column":7,"nodeType":"87","endLine":10,"endColumn":45},{"ruleId":"85","severity":1,"message":"86","line":37,"column":13,"nodeType":"87","endLine":37,"endColumn":67},{"ruleId":"92","severity":1,"message":"93","line":5,"column":5,"nodeType":"94","messageId":"95","endLine":7,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":5,"column":5,"nodeType":"94","messageId":"95","endLine":7,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":8,"column":17,"nodeType":"87","endLine":8,"endColumn":126},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'episodio' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]