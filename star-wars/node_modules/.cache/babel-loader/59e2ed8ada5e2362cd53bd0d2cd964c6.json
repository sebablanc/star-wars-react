{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica2/parte1/star-wars/src/components/agregar-character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport yodaThinking from '../assets/yoda-thinking.webp';\nimport FormButton from './ui/form-button';\nimport InputForm from './ui/input-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AgregarCharacter() {\n  _s();\n\n  const [episodio, setEpisodio] = useState('');\n  const [personaje, setPersonaje] = useState('');\n\n  async function submitData() {\n    if (episodio === '' || personaje === '') return;\n\n    try {\n      const response = await fetch('http://localhost:8000/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          episode: episodio,\n          character: personaje\n        })\n      });\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"welcome-title\",\n      children: \"\\xBFAgregar un nuevo personaje es lo que deseas, joven padawan?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"yoda-thinking\",\n      src: yodaThinking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"addForm\",\n      className: \"agregar-character-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(InputForm, {\n        label: \"Episodio\",\n        type: \"text\",\n        onChange: event => setEpisodio(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        label: \"Personaje\",\n        type: \"text\",\n        onChange: event => {\n          setPersonaje(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        id: \"cancelButton\",\n        nameClass: \"back-button\",\n        type: \"button\",\n        label: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        id: \"submitButton\",\n        nameClass: \"submit-button\",\n        type: \"submit\",\n        label: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgregarCharacter, \"zLMglBVsu/8v1cXR1JdQ6rtOCMI=\");\n\n_c = AgregarCharacter;\nexport default AgregarCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgregarCharacter\");","map":{"version":3,"sources":["/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica2/parte1/star-wars/src/components/agregar-character.js"],"names":["React","useEffect","useState","yodaThinking","FormButton","InputForm","AgregarCharacter","episodio","setEpisodio","personaje","setPersonaje","submitData","response","fetch","method","headers","body","JSON","stringify","episode","character","data","json","err","console","log","handleSubmit","event","preventDefault","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,SAASC,gBAAT,GAA2B;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeS,UAAf,GAA4B;AACxB,QAAGJ,QAAQ,KAAK,EAAb,IAAmBE,SAAS,KAAK,EAApC,EAAwC;;AAExC,QAAI;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF0C;AAGnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAEZ,QADQ;AAEjBa,UAAAA,SAAS,EAAEX;AAFM,SAAf;AAH6C,OAA3B,CAA5B;AAQA,YAAMY,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KAXD,CAWE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAjB,IAAAA,UAAU;AACb,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAER;AAApC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,SAAS,EAAC,wBAA7B;AAAsD,MAAA,QAAQ,EAAG0B,CAAD,IAAMH,YAAY,CAACG,CAAD,CAAlF;AAAA,8BAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC,MAAjC;AAAwC,QAAA,QAAQ,EAAGF,KAAD,IAAWnB,WAAW,CAACmB,KAAK,CAACG,MAAN,CAAaC,KAAd;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,QAAQ,EAAGJ,KAAD,IAAU;AAAEjB,UAAAA,YAAY,CAACiB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAZ;AAAiC;AAAhG;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC,aAAxC;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAoE,QAAA,KAAK,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC,eAAxC;AAAwD,QAAA,IAAI,EAAC,QAA7D;AAAsE,QAAA,KAAK,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA5CQzB,gB;;KAAAA,gB;AA8CT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport yodaThinking from '../assets/yoda-thinking.webp';\nimport FormButton from './ui/form-button';\nimport InputForm from './ui/input-form';\n\nfunction AgregarCharacter(){\n    const [episodio, setEpisodio] = useState('');\n    const [personaje, setPersonaje] = useState('');\n\n    async function submitData() {\n        if(episodio === '' || personaje === '') return;\n\n        try {\n            const response = await fetch('http://localhost:8000/', {\n                method: 'post',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    episode: episodio,\n                    character: personaje\n                })\n            });\n            const data = await response.json();\n            return data;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        submitData();\n    }\n\n    return (\n        <div>\n            <h1 className=\"welcome-title\">Â¿Agregar un nuevo personaje es lo que deseas, joven padawan?</h1>\n            <img className=\"yoda-thinking\" src={yodaThinking} />\n        \n            <form id=\"addForm\" className=\"agregar-character-form\" onSubmit={(e)=> handleSubmit(e)} >\n                \n                <InputForm label=\"Episodio\" type=\"text\" onChange={(event) => setEpisodio(event.target.value)} />\n\n                <InputForm label=\"Personaje\" type=\"text\" onChange={(event) =>{ setPersonaje(event.target.value)}} />\n                \n                <FormButton id=\"cancelButton\" nameClass=\"back-button\" type=\"button\" label=\"Volver\" />\n                <FormButton id=\"submitButton\" nameClass=\"submit-button\" type=\"submit\" label=\"Guardar\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default AgregarCharacter;"]},"metadata":{},"sourceType":"module"}