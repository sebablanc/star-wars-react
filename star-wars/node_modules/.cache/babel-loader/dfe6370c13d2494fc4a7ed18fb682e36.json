{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica2/parte1/star-wars/src/components/agregar-character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport yodaThinking from '../../public/assets/yoda-thinking.webp';\nimport FormButton from './ui/form-button';\nimport InputForm from './ui/input-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AgregarCharacter({\n  changePage\n}) {\n  _s();\n\n  const [episodio, setEpisodio] = useState('');\n  const [personaje, setPersonaje] = useState('');\n\n  async function submitData() {\n    if (episodio === '' || personaje === '') return;\n\n    try {\n      const response = await fetch('http://localhost:8000/saveCharacter', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          episode: 'episodio_' + episodio,\n          character: personaje\n        })\n      });\n      const data = await response.json();\n      alert(data.message);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"welcome-title\",\n      children: \"\\xBFAgregar un nuevo personaje es lo que deseas, joven padawan?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"character-float\",\n      src: yodaThinking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"addForm\",\n      className: \"agregar-character-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(InputForm, {\n        label: \"Episodio\",\n        type: \"number\",\n        onChange: event => setEpisodio(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        label: \"Personaje\",\n        type: \"text\",\n        onChange: event => setPersonaje(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        id: \"cancelButton\",\n        nameClass: \"back-button\",\n        type: \"button\",\n        label: \"Volver\",\n        onClicked: () => changePage('HOME')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        id: \"submitButton\",\n        nameClass: \"submit-button save-button\",\n        type: \"submit\",\n        label: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgregarCharacter, \"zLMglBVsu/8v1cXR1JdQ6rtOCMI=\");\n\n_c = AgregarCharacter;\nexport default AgregarCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgregarCharacter\");","map":{"version":3,"sources":["/home/sebastian/Documentos/BBDD_NoSQL/proyectos/practica2/parte1/star-wars/src/components/agregar-character.js"],"names":["React","useState","yodaThinking","FormButton","InputForm","AgregarCharacter","changePage","episodio","setEpisodio","personaje","setPersonaje","submitData","response","fetch","method","headers","body","JSON","stringify","episode","character","data","json","alert","message","err","console","log","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport yodaThinking from '../../public/assets/yoda-thinking.webp';\nimport FormButton from './ui/form-button';\nimport InputForm from './ui/input-form';\n\nfunction AgregarCharacter({changePage}){\n    const [episodio, setEpisodio] = useState('');\n    const [personaje, setPersonaje] = useState('');\n\n    async function submitData() {\n        if(episodio === '' || personaje === '') return;\n\n        try {\n            const response = await fetch('http://localhost:8000/saveCharacter', {\n                method: 'post',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    episode: 'episodio_'+episodio,\n                    character: personaje\n                })\n            });\n            const data = await response.json();\n            alert(data.message);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        submitData();\n    }\n\n    return (\n        <div>\n            <h1 className=\"welcome-title\">Â¿Agregar un nuevo personaje es lo que deseas, joven padawan?</h1>\n            <img className=\"character-float\" src={yodaThinking} />\n        \n            <form id=\"addForm\" className=\"agregar-character-form\" onSubmit={(e)=> handleSubmit(e)} >\n                \n                <InputForm label=\"Episodio\" type=\"number\" onChange={(event) => setEpisodio(event.target.value)} />\n\n                <InputForm label=\"Personaje\" type=\"text\" onChange={(event) => setPersonaje(event.target.value)} />\n                \n                <FormButton id=\"cancelButton\" nameClass=\"back-button\" type=\"button\" label=\"Volver\" onClicked={() => changePage('HOME')} />\n                <FormButton id=\"submitButton\" nameClass=\"submit-button save-button\" type=\"submit\" label=\"Guardar\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default AgregarCharacter;"]},"metadata":{},"sourceType":"module"}